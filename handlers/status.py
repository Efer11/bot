from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from database.database import toggle_printer_status, get_printer_status

router = Router()

@router.message(Command("status"))
async def show_status(message: Message):
    printer_id = message.from_user.id
    status = await get_printer_status(printer_id)

    if status is None:
        await message.answer("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.")
        return

    status_text = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if status else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data="toggle_status")]
        ]
    )

    await message.answer(f"–í–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status_text}", reply_markup=keyboard)


@router.callback_query(F.data == "toggle_status")
async def toggle_status(call: CallbackQuery):
    printer_id = call.from_user.id
    new_status = await toggle_printer_status(printer_id)

    if new_status is None:
        await call.answer("‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞.")
        return

    status_text = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if new_status else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data="toggle_status")]
        ]
    )

    await call.message.edit_text(f"–í–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status_text}", reply_markup=keyboard)
    await call.answer("‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω!")
